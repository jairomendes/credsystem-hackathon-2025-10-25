#!/bin/bash

API_URL="http://localhost:18020"

echo "üß™ Iniciando testes da API Velocistas da Pilha"
echo "================================================"

# Fun√ß√£o de teste de inten√ß√£o com medi√ß√£o de tempo
test_intent() {
    INTENT=$1
    EXPECTED_ID=$2
    EXPECTED_NAME=$3

    START=$(date +%s%3N)
    RESPONSE=$(curl -s -X POST $API_URL/api/find-service \
        -H "Content-Type: application/json" \
        -d "{\"intent\": \"$INTENT\"}")
    END=$(date +%s%3N)
    DURATION=$((END - START))

    SERVICE_ID=$(echo $RESPONSE | grep -o '"service_id":[0-9]*' | grep -o '[0-9]*')

    if [ "$SERVICE_ID" = "$EXPECTED_ID" ]; then
        echo "‚úÖ '$INTENT' ‚Üí ID $SERVICE_ID (correto) [$DURATION ms]"
        PASS_COUNT=$((PASS_COUNT + 1))
    else
        echo "‚ùå '$INTENT' ‚Üí ID $SERVICE_ID (esperado: $EXPECTED_ID) [$DURATION ms]"
        FAIL_COUNT=$((FAIL_COUNT + 1))
    fi

    TOTAL_TIME=$((TOTAL_TIME + DURATION))
}

# -----------------------------
# 1Ô∏è‚É£ Health Check
# -----------------------------
echo ""
echo "1Ô∏è‚É£ Testando /api/healthz..."
HEALTH=$(curl -s $API_URL/api/healthz)
echo "Resposta: $HEALTH"

if echo "$HEALTH" | grep -q '"status":"ok"'; then
    echo "‚úÖ Health check passou!"
else
    echo "‚ùå Health check falhou!"
    exit 1
fi

# -----------------------------
# 2Ô∏è‚É£ Testar inten√ß√µes conhecidas
# -----------------------------
CSV_FILE="./assets/intents_pre_loaded.csv"

echo ""
echo "2Ô∏è‚É£ Testando todas as inten√ß√µes conhecidas..."

PASS_COUNT=0
FAIL_COUNT=0
TOTAL_TIME=0
COUNT=0

while IFS=";" read -r SERVICE_ID SERVICE_NAME INTENT; do
    test_intent "$INTENT" "$SERVICE_ID" "$SERVICE_NAME"
    COUNT=$((COUNT + 1))
done < <(tail -n +2 "$CSV_FILE")

if [ $COUNT -gt 0 ]; then
    AVG_TIME=$((TOTAL_TIME / COUNT))
else
    AVG_TIME=0
fi

echo "‚è±Ô∏è Tempo total: ${TOTAL_TIME} ms"
echo "‚è±Ô∏è Tempo m√©dio: ${AVG_TIME} ms por requisi√ß√£o"
echo "‚úÖ Passaram: $PASS_COUNT"
echo "‚ùå Falharam: $FAIL_COUNT"

# -----------------------------
# 3Ô∏è‚É£ Testar inten√ß√µes similares (LLM)
# -----------------------------
EXTRA_CSV="./assets/extra-intents.csv"

echo ""
echo "3Ô∏è‚É£ Testando todas as inten√ß√µes similares..."

PASS_COUNT=0
FAIL_COUNT=0
TOTAL_TIME=0
COUNT=0

while IFS=";" read -r EXPECTED_ID EXPECTED_NAME INTENT; do
    test_intent "$INTENT" "$EXPECTED_ID" "$EXPECTED_NAME"
    COUNT=$((COUNT + 1))
done < <(tail -n +2 "$EXTRA_CSV")

if [ $COUNT -gt 0 ]; then
    AVG_TIME=$((TOTAL_TIME / COUNT))
else
    AVG_TIME=0
fi

echo "‚è±Ô∏è Tempo total: ${TOTAL_TIME} ms"
echo "‚è±Ô∏è Tempo m√©dio: ${AVG_TIME} ms por requisi√ß√£o"
echo "‚úÖ Passaram: $PASS_COUNT"
echo "‚ùå Falharam: $FAIL_COUNT"

echo ""
echo "================================================"
echo "‚úÖ Testes conclu√≠dos!"
